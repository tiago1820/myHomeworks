Función Barbol(valor) {
    valorPropio = valor;
    izquierda = Nulo;
    derecha = Nulo;
}

Barbol.insertar(valor) {
    Si valor < valorPropio:
        Si izquierda es Nulo:
            Crear un nuevo Barbol con valor y asignarlo a izquierda.
        Sino:
            Llamar al método insertar en el nodo izquierdo con valor.
    Sino si valor > valorPropio:
        Si derecha es Nulo:
            Crear un nuevo Barbol con valor y asignarlo a derecha.
        Sino:
            Llamar al método insertar en el nodo derecho con valor.
}

Barbol.tamaño() {
    Contador = 1;

    Si izquierda existe:
        Aumentar contador por el tamaño del nodo izquierdo (llamando al método tamaño en el nodo izquierdo).
    
    Si derecha existe:
        Aumentar contador por el tamaño del nodo derecho (llamando al método tamaño en el nodo derecho).
    
    Devolver contador.
}

Barbol.contiene(valor) {
    Si valorPropio es igual a valor:
        Devolver verdadero.
    Sino si valor < valorPropio:
        Si izquierda existe:
            Devolver el resultado de llamar al método contiene en el nodo izquierdo con valor.
        Sino:
            Devolver falso.
    Sino:
        Si derecha existe:
            Devolver el resultado de llamar al método contiene en el nodo derecho con valor.
        Sino:
            Devolver falso.
}

Barbol.depthFirstForEach(orden = "in-order", funciónDeLlamada) {
    Función preOrden(nodo, funciónDeLlamada) {
        Si nodo existe:
            Llamar a funciónDeLlamada con el valor de nodo.
            Llamar a preOrden en el nodo izquierdo con funciónDeLlamada.
            Llamar a preOrden en el nodo derecho con funciónDeLlamada.
    }

    Función inOrden(nodo, funciónDeLlamada) {
        Si nodo existe:
            Llamar a inOrden en el nodo izquierdo con funciónDeLlamada.
            Llamar a funciónDeLlamada con el valor de nodo.
            Llamar a inOrden en el nodo derecho con funciónDeLlamada.
    }

    Función postOrden(nodo, funciónDeLlamada) {
        Si nodo existe:
            Llamar a postOrden en el nodo izquierdo con funciónDeLlamada.
            Llamar a postOrden en el nodo derecho con funciónDeLlamada.
            Llamar a funciónDeLlamada con el valor de nodo.
    }

    Si orden es "pre-order":
        Llamar a preOrden con this y funciónDeLlamada.
    Sino si orden es "in-order":
        Llamar a inOrden con this y funciónDeLlamada.
    Sino si orden es "post-order":
        Llamar a postOrden con this y funciónDeLlamada.
}

Barbol.breadthFirstForEach(funciónDeLlamada) {
    Cola = Crear una cola e insertar this en ella.

    Mientras Cola no esté vacía:
        Nodo = Quitar el primer elemento de la cola.
        Llamar a funciónDeLlamada con el valor de nodo.
        Si nodo izquierdo existe:
            Insertar nodo izquierdo en la cola.
        Si nodo derecho existe:
            Insertar nodo derecho en la cola.
}

